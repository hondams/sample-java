<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.github.hondams</groupId>
		<artifactId>fw-dependencies</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../fw-dependencies/pom.xml</relativePath>
	</parent>
	<artifactId>fw-parent</artifactId>
	<packaging>pom</packaging>
	<properties>
		<m2e.apt.activation>jdt_apt</m2e.apt.activation>
		<spotless.version>2.44.4</spotless.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<configuration>
						<excludes>
							<exclude>
								<groupId>org.projectlombok</groupId>
								<artifactId>lombok</artifactId>
							</exclude>
						</excludes>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<!-- https://github.com/diffplug/spotless/tree/main/plugin-maven -->
				<groupId>com.diffplug.spotless</groupId>
				<artifactId>spotless-maven-plugin</artifactId>
				<version>${spotless.version}</version>
				<configuration>
					<java>
						<!-- no need to specify files, inferred automatically, but you can if you want -->
						<cleanthat>
							<mutators>
								<!-- optional. Default to 'SafeAndConsensual' to include all mutators -->
								<mutator>SafeAndConsensual</mutator>
								<mutator>SafeButNotConsensual</mutator>
								<mutator>SafeButControversial</mutator>
							</mutators>
							<!-- You can discard specific rules -->
							<!--
							<excludedMutators>
								<excludedMutator>OptionalNotEmpty</excludedMutator>
							</excludedMutators>
							-->
							<!-- optional. Default to false, not to include draft mutators from Composite mutators -->
							<includeDraft>true</includeDraft>
						</cleanthat>
						<!-- apply a specific flavor of google-java-format and reflow long strings -->
						<eclipse>
							<file>${project.basedir}/../settings/eclipse-java-google-style.xml</file>
							<!-- If the access to the p2 repositories is restricted, mirrors can be pecified using a URI prefix map as follows:-->
							<!-- 
							<p2Mirrors>
								<p2Mirror>
								<prefix>https://download.eclipse.org/eclipse/updates/4.35/</prefix>
								<url>https://some.internal.mirror/4-35-updates-p2/</url>
								</p2Mirror>
							</p2Mirrors>
							-->
						</eclipse>
						<formatAnnotations />
                        <trimTrailingWhitespace/>
                        <endWithNewline/>
					</java>
				</configuration>
				<executions>
				<execution>
					<goals>
						<goal>apply</goal>
						<goal>check</goal>
					</goals>
					<phase>compile</phase>
				</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
